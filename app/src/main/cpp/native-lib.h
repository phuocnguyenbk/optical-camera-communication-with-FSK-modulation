//
// Created by MA107 on 2019-04-24.
//

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <stdio.h>
#include <string>
#include <opencv2/opencv.hpp>
#include <iostream>
#include <cstring>
#include <math.h>
#include <algorithm>
#include <vector>

using namespace std;
using namespace cv;
/* Header for class mobapptut_com_camera2videoimage_NativeClass */

#ifndef _Included_mobapptut_com_camera2videoimage_NativeClass
#define _Included_mobapptut_com_camera2videoimage_NativeClass
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     mobapptut_com_camera2videoimage_NativeClass
 * Method:    convertGray
 * Signature: (JJ)I
 */

// Function declarations
void drawAxis(Mat &, Point, Point, Scalar, const float);
double getOrientation(const vector <Point> &, Mat &);

int toGray(Mat img, Mat &gray);


JNIEXPORT int JNICALL Java_com_company_cpp_hellocv_NativeClass_convertGray
(JNIEnv *, jclass, jlong, jlong);


void tinhKhoangCach(int , int );
void detectLight(Mat& frame);
JNIEXPORT void JNICALL Java_com_company_cpp_hellocv_NativeClass_lightDetection
(JNIEnv *, jclass, jlong);

JNIEXPORT jstring JNICALL Java_com_company_cpp_hellocv_NativeClass_getJniStringBytes
        (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif

